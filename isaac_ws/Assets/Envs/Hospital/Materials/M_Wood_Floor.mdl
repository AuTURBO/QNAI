mdl 1.3;

import ::math::*;
import ::state::*;
import ::tex::*;
import ::anno::*;
using .::OmniUe4Function import *;
using .::OmniUe4Base import *;

export annotation sampler_color();
export annotation sampler_normal();
export annotation sampler_grayscale();
export annotation sampler_alpha();
export annotation sampler_masks();
export annotation sampler_distancefield();
export annotation dither_masked_off();
export annotation world_space_normal();

export material M_Wood_Floor(
	float RotationAngle_0_1__S_ = 0.25)
 = 
	let {
	float3 WorldPositionOffset_mdl = float3(0.0,0.0,0.0);
	float2 CustomizedUV0_mdl = float2(state::texture_coordinate(0).x,1.0-state::texture_coordinate(0).y);

	float2 Local0 = (float2(0.5,0.5) * -1.0);
	float2 Local1 = (CustomizedUV0_mdl * 3.0);
	float2 Local2 = (Local0 + Local1);
	float Local3 = (RotationAngle_0_1__S_ * 6.283185);
	float Local4 = math::cos(Local3);
	float Local5 = math::sin(Local3);
	float Local6 = (Local5 * -1.0);
	float Local7 = math::dot(Local2, float2(Local4,Local6));
	float Local8 = math::dot(Local2, float2(Local5,Local4));
	float2 Local9 = (float2(0.5,0.5) + float2(Local7,Local8));
	float4 Local10 = ::unpack_normal_map(tex::lookup_float4(texture_2d("./Textures/Tex_Wood_Floor_normal.png",::tex::gamma_linear),float2(Local9.x,1.0-Local9.y),tex::wrap_repeat,tex::wrap_repeat));

	float3 Normal_mdl = float3(Local10.x,Local10.y,Local10.z);

	float4 Local11 = tex::lookup_float4(texture_2d("./Textures/Tex_Wood_Floor_basecolor.png",::tex::gamma_srgb),float2(Local9.x,1.0-Local9.y),tex::wrap_repeat,tex::wrap_repeat);
	float4 Local12 = tex::lookup_float4(texture_2d("./Textures/Tex_Wood_Floor_MergeRAM.png",::tex::gamma_srgb),float2(Local9.x,1.0-Local9.y),tex::wrap_repeat,tex::wrap_repeat);
	float Local13 = math::lerp(0.3,2.0,Local12.x);

	float3 EmissiveColor_mdl = float3(0.0,0.0,0.0);
	float OpacityMask_mdl = 1.0;
	float3 BaseColor_mdl = float3(Local11.x,Local11.y,Local11.z);
	float Metallic_mdl = 0.0;
	float Specular_mdl = 0.5;
	float Roughness_mdl = Local13;

	} in
		::OmniUe4Base(
			base_color: BaseColor_mdl,
			metallic: Metallic_mdl,
			roughness: Roughness_mdl,
			specular: Specular_mdl,
			normal: Normal_mdl,
			opacity: OpacityMask_mdl,
			emissive_color: EmissiveColor_mdl,
			displacement: WorldPositionOffset_mdl,
			two_sided: false);
